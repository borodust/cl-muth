(cl:in-package :cl-muth.tests)
(5am:in-suite :cl-muth.tests)

(5am:test thread-pool
  (let ((pool (muth:make-thread-pool 2))
        (counter (make-guarded-reference 0))
        (start (%current-seconds)))
    (open-pool pool)
    (wait-with-latch (latch)
      (flet ((%task ()
               (sleep 0.1)
               (with-guarded-reference (counter)
                 (incf counter)
                 (when (= counter 4)
                   (open-latch latch)))))
        (push-to-pool pool #'%task)
        (push-to-pool pool #'%task)
        (push-to-pool pool #'%task)
        (push-to-pool pool #'%task)))
    (5am:is (>= (- (%current-seconds) start) 0.2))
    (close-pool pool)
    (5am:is (= (with-guarded-reference (counter) counter) 4))))
